---

# This compose-file is production only. So, it should not be called directly.
#
# Instead, it should be a part of your deploy strategy.
# This setup is supposed to be used with `docker-swarm`.
# See `./docs/pages/template/production.rst` docs.

version: "3.5"
services:
  db:
    image: "postgres:11.2-alpine"
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - webnet
    env_file: ./config/.env

  redis:
    image: redis:4.0.14-alpine
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - webnet
    volumes:
      - redis-data:/data

  caddy:
    image: "wemakeservices/caddy-docker:0.10.11-1"
    restart: unless-stopped
    env_file: ./config/.env
    volumes:
      - ./docker/caddy/certs:/root/.caddy  # saving certificates
      - ./docker/caddy/Caddyfile:/etc/Caddyfile:ro  # configuration
      - django-static:/var/www/django/static:ro  # serving django's statics
      - django-media:/var/www/django/media:ro  # serving django's media
      - logs:/var/log/share/
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - webnet

  web:
    <<: &web
      build:
        context: .
        dockerfile: ./docker/django/Dockerfile
        args:
          DJANGO_ENV: production
      restart: unless-stopped
      volumes:
        - django-media:/var/www/django/media
        - django-static:/var/www/django/static
        - logs:/var/log/share/
      environment:
        DJANGO_DATABASE_HOST: db
        REDIS_HOST: redis
        REDIS_PORT: 6379
    command: sh ./docker/django/gunicorn.sh
    depends_on:
      - db
      - redis
    networks:
      - webnet
    expose:
      - 8000

  dramatiq:
    <<: *web
    command: python3 manage.py rundramatiq --processes 1 --threads 2

networks:
  webnet:

volumes:
  pgdata:
  redis-data:
  django-static:
  django-media:
  logs:
